<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnPesquisar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        c7wtAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="btnLimpar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>